<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE struts PUBLIC "-//Apache Software Foundation//DTD Struts Configuration 2.3//EN" "http://struts.apache.org/dtds/struts-2.3.dtd">
<struts>

	<package name="default" extends="struts-default" namespace="/">
		<interceptors>
			<!-- 配置普通员工角色的权限检查拦截器 -->
			<interceptor name="empAuth"	class=
			"org.lzx.hros.action.authority.EmpAuthorityInterceptor"/>
			<!-- 配置经理角色的权限检查拦截器 -->
			<interceptor name="mgrAuth"	class=
			"org.lzx.hros.action.authority.MgrAuthorityInterceptor"/>
			<!-- 配置普通员工的默认的拦截器栈(默认的拦截器一定要放在最前面) -->
			<interceptor-stack name="empStack">
				<interceptor-ref name="defaultStack"/>
				<interceptor-ref name="empAuth"/>
			</interceptor-stack>
			<!-- 配置经理的默认的拦截器栈 -->
			<interceptor-stack name="mgrStack">
				<interceptor-ref name="defaultStack"/>
				<interceptor-ref name="mgrAuth"/>
			</interceptor-stack>
		</interceptors>	
	
		<!-- 定义全局Result映射 -->
		<global-results>
			<!-- 定义异常对应的视图页 -->
			<result name="business">/WEB-INF/content/error.jsp</result>
			<result name="root">/WEB-INF/content/error.jsp</result>
			<!-- 定义login逻辑视图对应的视图资源 -->
			<result name="login">/WEB-INF/content/login2.jsp</result>
		</global-results>

		<!-- 定义全局异常映射 -->
		<global-exception-mappings>
			<!-- 当Action中遇到MyException异常时， 系统将转入name为business的结果中 -->
			<exception-mapping exception="org.lzx.hros.utils.MyException"
				result="business" />
			<!-- 当Action中遇到Exception异常时， 系统将转入name为root的结果中 -->
			<exception-mapping exception="java.lang.Exception"
				result="root" />
		</global-exception-mappings>

		<!--============================下面是员工角色的Action======================== -->
		<!-- 定义处理登出请求的Action -->
		<action name="logout" class="org.lzx.hros.action.LogoutAction">
			<result>/WEB-INF/content/main.jsp</result>
		</action>

		<!-- 定义处理登录的Action（不用Spring代理创建的Bean，直接找对应执行类） -->
		<!-- 如果需要用Spring创建的ActionBean（为了使用AOP），就先在Spring配置文件中配置，然后下面class的值直接写对应Bean的名字。 -->
		<!-- 不写method默认执行execute方法 -->
		<action name="processLogin" class="org.lzx.hros.action.LoginAction">
			<result name="input">/WEB-INF/content/login.jsp</result>
			<result name="mgr">/WEB-INF/content/manager/index.jsp</result>
			<result name="emp">/WEB-INF/content/employee/index.jsp</result>
			<result name="error">/WEB-INF/content/login.jsp</result>
		</action>

		<!-- 进入打卡 -->
		<action name="*Punch" class="org.lzx.hros.action.PunchAction">
			<interceptor-ref name="empStack"/> 
			<result>/WEB-INF/content/{1}/punch.jsp</result>
		</action>
		<!-- 处理上班打卡 -->
		<action name="*Come" method="come"
			class="org.lzx.hros.action.ProcessPunchAction">
			<interceptor-ref name="empStack" /> 
			<result>/WEB-INF/content/{1}/index.jsp</result>
		</action>
		<!-- 处理下班打卡 -->
		<action name="*Leave" method="leave"
			class="org.lzx.hros.action.ProcessPunchAction">
			<interceptor-ref name="empStack" />
			<result>/WEB-INF/content/{1}/index.jsp</result>
		</action>


		<!-- 查看自己的非正常出勤 -->
		<action name="viewUnPunch" class="org.lzx.hros.action.ViewUnAttendAction">
			<!-- <interceptor-ref name="basicStack" /> <interceptor-ref name="empAuth" 
				/> -->
			<interceptor-ref name="empStack" />	
			<result>/WEB-INF/content/employee/viewUnAttend.jsp</result>
		</action>

		<!-- 进入异动申请 -->
		<action name="appChange" class="org.lzx.hros.action.AppChangeAction">
			<interceptor-ref name="empStack" />
			<interceptor-ref name="store">
				<param name="operationMode">RETRIEVE</param>
			</interceptor-ref>
			
			<result>/WEB-INF/content/employee/appChange.jsp</result>
		</action>

		<!-- 提交异动申请 -->
		<action name="processApp" class="org.lzx.hros.action.ProcessAppAction">
			<interceptor-ref name="empStack" />
			<interceptor-ref name="store">
				<param name="operationMode">STORE</param>
			</interceptor-ref>			
			<result name="input" type="redirect">
				/appChange.action?attid=${attId}
			</result>
			<result>/WEB-INF/content/employee/index.jsp</result>
		</action>

		<!-- 查看本人工资的Action -->
		<action name="view*Salary" class="org.lzx.hros.action.ViewSalaryAction">
			<!-- <interceptor-ref name="basicStack"/> <interceptor-ref name="empAuth"/> -->
			<interceptor-ref name="empStack"/>
			<result>/WEB-INF/content/{1}/viewSalary.jsp</result>
		</action>
		<!--============================下面是经理角色的Action======================== -->

		<!-- 查看所辖部门所有人的工资信息 -->
		<action name="viewDeptSal" class="org.lzx.hros.action.ViewDeptAction">
			<!-- <interceptor-ref name="basicStack"/> <interceptor-ref name="mgrAuth"/> -->
			<interceptor-ref name="mgrStack" />
			<result>/WEB-INF/content/manager/viewDeptSal.jsp</result>
		</action>
		
		<!-- 经理查看员工 -->
		<action name="viewEmp"
			class="org.lzx.hros.action.ViewEmpAction">
			<!-- <interceptor-ref name="basicStack"/> 
			<interceptor-ref name="mgrAuth"/>-->
			<interceptor-ref name="mgrStack"/> 
			<result>/WEB-INF/content/manager/viewEmp.jsp</result>
		</action>
		
		<!-- 经理查看申请 -->
		<action name="viewApp"
			class="org.lzx.hros.action.ViewAppAction">
			<!-- <interceptor-ref name="basicStack"/>
			<interceptor-ref name="mgrAuth"/>-->
			<interceptor-ref name="mgrStack"/> 
			<result>/WEB-INF/content/manager/viewApps.jsp</result>
		</action>
		
		<!-- 进入添加员工页面 -->
		<action name="addEmp">
			<interceptor-ref name="mgrStack"/>
			<result>/WEB-INF/content/manager/addEmp.jsp</result>
		</action>
		
		<!-- 经理增加员工 -->
		<action name="processAdd" class="org.lzx.hros.action.AddEmpAction">
			<!-- 使用系统默认的拦截器栈  -->
			<interceptor-ref name="mgrStack"/>
			<!-- 使用防止重复提交的token拦截器 (配置任何拦截器之前都要用默认拦截器，否则绑定领域模型会出错) -->
			<interceptor-ref name="token"/>
			<!-- 定义重复提交转向的视图，该逻辑视图名必须是invalid.token -->
			<result name="invalid.token">/WEB-INF/content/manager/addEmp.jsp</result>
			<result name="input">/WEB-INF/content/manager/addEmp.jsp</result>
			<result name="failure">/WEB-INF/content/manager/addEmp.jsp</result>
			<result>/WEB-INF/content/manager/index.jsp</result>
		</action>
		
		<!-- 经理处理申请 -->
		<action name="check"
			class="org.lzx.hros.action.CheckAppAction">
			<interceptor-ref name="mgrStack"/> 
			<!-- chain： 用于把相关的几个action连接起来，共同完成一个功能。2个Action中的数据都在ValueStack中-->
			<result type="chain">viewApp</result>
		</action>
		
		<!--============================其他Action，采用通配符配置======================== -->
		<action name="*">
			<result>/WEB-INF/content/{1}.jsp</result>
		</action>

	</package>
</struts>